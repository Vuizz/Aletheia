ðŸ§± Aletheia: Core Project Foundations (v1.0)
ðŸ§  Vision Summary
Aletheia is a modular, GPT-powered financial reasoning agent that analyzes markets using composable agent logic, structured memory, and multi-step causal inference. The foundation layer should support:

Multi-agent orchestration

State memory (belief system)

Incremental analysis building

Reusability & transparency of reasoning

Plug-in structure for future agents

ðŸ§± 1. Project Structure (Block-Based)

aletheia/
â”‚
â”œâ”€â”€ core/               # Central logic layer
â”‚   â”œâ”€â”€ orchestrator.py        # Runs the agent loop
â”‚   â”œâ”€â”€ state_manager.py       # Loads, updates, stores belief state
â”‚   â””â”€â”€ task_router.py         # Sends tasks to the correct agent(s)
â”‚
â”œâ”€â”€ agents/            # Modular agents (GPT roles)
â”‚   â”œâ”€â”€ event_parser.py
â”‚   â”œâ”€â”€ narrative_tracker.py
â”‚   â”œâ”€â”€ causal_reasoner.py
â”‚   â”œâ”€â”€ flow_estimator.py
â”‚   â”œâ”€â”€ scenario_forecaster.py
â”‚   â”œâ”€â”€ report_composer.py
â”‚   â””â”€â”€ ...
â”‚
â”œâ”€â”€ prompts/           # System prompts + templates
â”‚   â””â”€â”€ [agent_name].txt
â”‚
â”œâ”€â”€ memory/            # Agent memory (could be JSON or vector DB)
â”‚   â””â”€â”€ belief_state.json
â”‚
â”œâ”€â”€ interface/         # CLI, notebook, or API input/output
â”‚   â””â”€â”€ run_agent.py
â”‚
â”œâ”€â”€ data/              # External data (feeds, saved articles, etc.)
â”‚
â””â”€â”€ utils/             # Common helpers (API wrappers, logging)

TODO:
- Change Scenarios Agent to generate scenarios based on current narratives (ONGOING)
- Improve prompt tuner (ONGOING)
- Introduce info filtering before running its through the model ( A new agent that fitlters information to define if its relevant or not )
- Introduce new agents to complement analysis on narratives, gather more data about certain subjects
- Later Introduce new agents to Define market positions based on beleif state
- Introduce market position tracker, manager
